{"version":3,"sources":["styles/Index.ts","ToolGroup.tsx","Header.tsx","Label.tsx","Transition.tsx","CameraWork.tsx","Accordion.tsx","List.tsx","Outline.tsx","Card.tsx","Media.tsx","Dialogue.tsx","Panels.tsx","Conte.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GlobalStyle","createGlobalStyle","AlignCenter","styled","div","ToolGroup","useGlobal","selected","setSelected","keyDown","document","activeElement","blur","useHotkeys","Set","orientation","selectionMode","isQuiet","isEmphasized","selectedKeys","onSelectionChange","placement","api","window","DragArea","NoDragArea","HeaderLeft","navigator","userAgent","toLowerCase","indexOf","HeaderRight","Tab","width","selectedKey","maxHeight","FilePicker","useState","globalFileName","useEffect","a","loadFileName","fileName","alert","f","menuWidth","Header","setCuts","setPsds","setFileName","onPress","getElementById","click","type","style","display","id","directory","webkitdirectory","onChange","e","filelist","target","files","Array","from","psdFiles","filter","file","name","jsonFile","sort","b","Number","parseInt","slice","loadPSD","Promise","resolve","reader","FileReader","onload","result","readAsArrayBuffer","psds","reduce","promise","then","readPsd","push","readAsText","JSON","parse","marginX","LabelTop","p","LabelLL","LabelSideL","LabelSideM","Transition","cut","direction","gap","wrap","action","fadeIn","defaultSelectedKey","label","maxValue","value","fadeInDuration","fadeOut","fadeOutDuration","CameraWork","cameraWork","position","in","x","toString","y","out","scale","LabelHover","Toggle","input","Ul","ul","Label","labelFor","children","htmlFor","Accordion","labelName","toggle","setToggle","checked","onClick","alignItems","size","List","li","A","Outline","prtCut","picture","height","cuts","globalCuts","setCut","loadJSON","json","length","map","index","onMouseEnter","classList","add","onMouseLeave","remove","href","CardArea","IconArea","TitleArea","Card","mediatype","Title","Type","movie","audio","Media","Dialogue","minWidth","marginTop","ToolArea","Tool","title","tool","level","margin","Panels","mode","overflow","Scroll","MyTextArea","textarea","In","Out","Fade","svg","TextContainer","dialogue","time","timeSum","escKeyDown","key","gridArea","className","has","disabled","onKeyDown","text","viewBox","d","bottom","CutContainer","globalPsds","joinBy","arr1","arr2","arr2Dict","Map","o","item","get","cutsWithNoPicture","cutsWithNoJson","psd","psdfiles","psdfile","justifyContent","isIndeterminate","sum","i","backgroundColor","columns","areas","marginBottom","child","layerindex","src","canvas","toDataURL","transform","transformOrigin","alt","top","left","Conte","React","memo","rows","alignSelf","justifySelf","BackGround","GlobalGrid","theme","defaultTheme","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","prtPsd","setGlobal","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3fdc2bd3.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    height: 100%;\n    overflow: hidden;\n  }\n  body {\n    height: 100%;\n    overflow: hidden;\n    margin: 0;\n    padding: 0\n  }\n  #root {\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n  }\n  button {\n    -webkit-app-region: no-drag;\n  }\n  div.hover {\n   :hover {\n     background-color: var(--spectrum-alias-highlight-hover);\n   }\n  }\n  textarea.hover {\n    :hover {\n      color: var(--spectrum-alias-text-color-hover);\n      border: 1px solid var(--spectrum-alias-border-color-hover);\n      border-radius: var(--spectrum-global-dimension-size-50, var(--spectrum-alias-size-50));\n    }\n  }\n  div.isHover {\n    background-color: var(--spectrum-alias-highlight-hover);\n  }\n  li.isHover {\n    background-color: var(--spectrum-alias-highlight-hover);\n    border-radius: var(--spectrum-global-dimension-size-50, var(--spectrum-alias-size-50));\n  }\n  a {\n    cursor: default;\n    color: var(--spectrum-alias-text-color);\n    :hover {\n      color: var(--spectrum-alias-text-color-hover);\n    }\n  }\n`;\n","import React, { useGlobal } from 'reactn';\nimport { ActionGroup, Item, Tooltip, TooltipTrigger } from '@adobe/react-spectrum';\nimport styled from 'styled-components';\nimport Select from '@spectrum-icons/workflow/Select';\nimport Crop from '@spectrum-icons/workflow/Crop';\nimport Text from '@spectrum-icons/workflow/Text';\nimport { Selection } from '@react-types/shared/src/selection';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nconst AlignCenter = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: var(--spectrum-global-dimension-size-85, var(--spectrum-alias-size-85));\n`;\n\nexport const ToolGroup: React.FC = () => {\n  const [selected, setSelected] = useGlobal('tool');\n\n  const keyDown = () => {\n    const activeElement = document.activeElement as HTMLElement;\n    activeElement.blur();\n  };\n\n  useHotkeys('v', () => {\n    setSelected(new Set(['Select']));\n    keyDown();\n  });\n\n  useHotkeys('c', () => {\n    setSelected(new Set(['Crop']));\n    keyDown();\n  });\n\n  useHotkeys('t', () => {\n    setSelected(new Set(['Text']));\n    keyDown();\n  });\n\n  return (\n    <AlignCenter>\n      <ActionGroup\n        orientation=\"vertical\"\n        selectionMode=\"single\"\n        isQuiet\n        isEmphasized\n        selectedKeys={selected}\n        onSelectionChange={setSelected as (keys: Selection) => any}\n      >\n        <TooltipTrigger placement=\"end\">\n          <Item key=\"Select\">\n            <Select />\n          </Item>\n          <Tooltip>Select (V)</Tooltip>\n        </TooltipTrigger>\n        <TooltipTrigger placement=\"end\">\n          <Item key=\"Crop\">\n            <Crop />\n          </Item>\n          <Tooltip>Crop (C)</Tooltip>\n        </TooltipTrigger>\n        <TooltipTrigger placement=\"end\">\n          <Item key=\"Text\">\n            <Text />\n          </Item>\n          <Tooltip>Text (T)</Tooltip>\n        </TooltipTrigger>\n      </ActionGroup>\n    </AlignCenter>\n  );\n};\n","import React, { useState, useGlobal, useEffect } from 'reactn';\nimport { Key } from 'react';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { ActionButton, Item, TabList, Tabs, Text, Picker, ActionGroup } from '@adobe/react-spectrum';\nimport styled from 'styled-components';\nimport Home from '@spectrum-icons/workflow/Home';\nimport TableEdit from '@spectrum-icons/workflow/TableEdit';\nimport VideoFilled from '@spectrum-icons/workflow/VideoFilled';\nimport Share from '@spectrum-icons/workflow/Share';\nimport Branch2 from '@spectrum-icons/workflow/Branch2';\nimport Settings from '@spectrum-icons/workflow/Settings';\nimport DocumentOutline from '@spectrum-icons/workflow/DocumentOutline';\nimport FolderOpenOutline from '@spectrum-icons/workflow/FolderOpenOutline';\nimport { readPsd, Psd } from 'ag-psd';\n\nconst { api } = window;\n\nconst DragArea = styled.div`\n  -webkit-app-region: drag;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst NoDragArea = styled.div`\n  -webkit-app-region: no-drag;\n`;\n\nconst HeaderLeft = styled.div`\n  display: flex;\n  align-items: center;\n  ${window.navigator.userAgent.toLowerCase().indexOf('mac') !== -1 && api\n    ? `margin-left: var(--spectrum-global-dimension-size-800, var(--spectrum-alias-size-800));`\n    : `margin-left: var(--spectrum-global-dimension-size-100, var(--spectrum-alias-size-100));`}\n  margin-right: auto;\n`;\n\nconst HeaderRight = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  margin-right: var(--spectrum-global-dimension-size-100, var(--spectrum-alias-size-100));\n  ${window.navigator.userAgent.toLowerCase().indexOf('mac') !== -1 &&\n  api &&\n  `&::before {\n    content: '';\n    padding-left: var(--spectrum-global-dimension-size-700, var(--spectrum-alias-size-700));\n  }`}\n`;\n\nconst Tab: React.FC = () => {\n  const [selected, setSelected] = useGlobal('mode');\n\n  const keyDown = () => {\n    const activeElement = document.activeElement as HTMLElement;\n    activeElement.blur();\n  };\n\n  useHotkeys('e', () => {\n    setSelected('Edit');\n    keyDown();\n  });\n\n  useHotkeys('p', () => {\n    setSelected('Preview');\n    keyDown();\n  });\n\n  return (\n    <Tabs width=\"fit-content\" selectedKey={selected} onSelectionChange={setSelected as (keys: Key) => any}>\n      <TabList maxHeight=\"size-500\">\n        <Item key=\"Edit\">\n          <TableEdit />\n          <Text>Edit</Text>\n        </Item>\n        <Item key=\"Preview\">\n          <VideoFilled />\n          <Text>Preview</Text>\n        </Item>\n      </TabList>\n    </Tabs>\n  );\n};\n\nconst FilePicker: React.FC = () => {\n  const [selected, setSelected] = useState('');\n  const globalFileName = useGlobal('globalFileName')[0];\n  useEffect(() => {\n    const f = async () => {\n      try {\n        if (!api) {\n          setSelected(globalFileName);\n          return;\n        }\n        const fileName = await api.loadFileName();\n        setSelected(fileName);\n      } catch (e) {\n        alert(e);\n      }\n    };\n    f();\n  }, [globalFileName, setSelected]);\n  return (\n    <Picker\n      isQuiet\n      menuWidth=\"size-3400\"\n      max-width=\"fit-content\"\n      selectedKey={selected}\n      onSelectionChange={setSelected as (keys: Key) => any}\n    >\n      <Item key={selected}>\n        <DocumentOutline />\n        <Text>{selected}</Text>\n      </Item>\n    </Picker>\n  );\n};\n\nexport const Header: React.FC = () => {\n  const setCuts = useGlobal('globalCuts')[1];\n  const setPsds = useGlobal('globalPsds')[1];\n  const setFileName = useGlobal('globalFileName')[1];\n  const loadFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const filelist = e.target.files;\n    /* @ts-expect-error */\n    const files = Array.from(filelist);\n    const psdFiles = files.filter((file) => file.name.indexOf('.psd') !== -1);\n    const jsonFile = files.filter((file) => file.name.indexOf('.json') !== -1)![0];\n    psdFiles.sort((a, b) => Number.parseInt(a.name.slice(1, 4)) - Number.parseInt(b.name.slice(1, 4)));\n\n    setFileName(jsonFile.name);\n\n    const loadPSD = (file: File) =>\n      new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n          resolve(reader.result as ArrayBuffer);\n        };\n        reader.readAsArrayBuffer(file);\n      });\n\n    (async () => {\n      let psds: Psd[] = [];\n      await psdFiles.reduce(async (promise, file) => {\n        return promise.then(async () => {\n          psds.push(readPsd((await loadPSD(file)) as ArrayBuffer));\n        });\n      }, Promise.resolve());\n      setPsds(psds);\n    })();\n\n    const loadJSON: Promise<string> = new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        resolve(reader.result as string);\n      };\n      reader.readAsText(jsonFile, 'utf8');\n    });\n    //loadPSD.then((result) => console.log(result));\n    loadJSON.then((result) => setCuts(JSON.parse(result)));\n  };\n\n  return (\n    <DragArea>\n      <HeaderLeft>\n        {!api && (\n          <ActionButton isQuiet onPress={() => document.getElementById('inputDirectory')?.click()}>\n            <FolderOpenOutline />\n            <input\n              type=\"file\"\n              style={{ display: 'none' }}\n              id=\"inputDirectory\"\n              /* @ts-expect-error */\n              directory=\"\"\n              webkitdirectory=\"\"\n              onChange={loadFile}\n            />\n          </ActionButton>\n        )}\n        <ActionButton isQuiet marginX=\"size-200\">\n          <Home />\n        </ActionButton>\n        <NoDragArea>\n          <Tab />\n        </NoDragArea>\n      </HeaderLeft>\n\n      <FilePicker />\n\n      <HeaderRight>\n        <ActionGroup isQuiet>\n          <Item key=\"Share\">\n            <Share />\n          </Item>\n          <Item key=\"Branch2\">\n            <Branch2 />\n          </Item>\n          <Item key=\"Settings\">\n            <Settings />\n          </Item>\n        </ActionGroup>\n      </HeaderRight>\n    </DragArea>\n  );\n};\n","import styled from 'styled-components';\n\nexport const LabelTop = styled.p`\n  color: var(--spectrum-alias-label-text-color);\n  font-size: var(--spectrum-global-dimension-font-size-75);\n  margin: var(--spectrum-global-dimension-size-100, var(--spectrum-alias-size-100)) 0;\n`;\n\nexport const LabelLL = styled.div`\n  width: var(--spectrum-global-dimension-size-700, var(--spectrum-alias-size-700));\n  color: var(--spectrum-alias-label-text-color);\n  font-size: var(--spectrum-global-dimension-font-size-75);\n  margin: var(--spectrum-global-dimension-size-100, var(--spectrum-alias-size-100)) 0;\n`;\n\nexport const LabelSideL = styled.div`\n  width: var(--spectrum-global-dimension-size-300, var(--spectrum-alias-size-300));\n  color: var(--spectrum-alias-label-text-color);\n  font-size: var(--spectrum-global-dimension-font-size-75);\n  margin: var(--spectrum-global-dimension-size-100, var(--spectrum-alias-size-100)) 0;\n`;\n\nexport const LabelSideM = styled.div`\n  width: var(--spectrum-global-dimension-size-200, var(--spectrum-alias-size-200));\n  color: var(--spectrum-alias-label-text-color);\n  font-size: var(--spectrum-global-dimension-font-size-75);\n  margin: var(--spectrum-global-dimension-size-100, var(--spectrum-alias-size-100)) 0;\n`;\n","import React, { useGlobal } from 'reactn';\nimport { Flex, Slider, Picker, Item, Text } from '@adobe/react-spectrum';\nimport { LabelLL } from 'Label';\n\nexport const Transition: React.FC = () => {\n  const cut = useGlobal('cut')[0];\n  return (\n    <>\n      <Flex direction=\"row\" gap=\"size-200\" wrap>\n        <LabelLL>Fade In</LabelLL>\n        <Picker width=\"184px\" selectedKey={cut.action?.fadeIn} defaultSelectedKey=\"None\">\n          <Item key=\"None\">\n            <Text>None</Text>\n          </Item>\n          <Item key=\"White In\">\n            <Text>White In</Text>\n          </Item>\n          <Item key=\"Black In\">\n            <Text>Black In</Text>\n          </Item>\n          <Item key=\"Cross\">\n            <Text>Cross</Text>\n          </Item>\n        </Picker>\n        <Slider label=\"Duration\" maxValue={480} value={cut.action?.fadeInDuration} width=\"100%\" />\n        <LabelLL>Fade Out</LabelLL>\n        <Picker width=\"184px\" selectedKey={cut.action?.fadeOut} defaultSelectedKey=\"None\">\n          <Item key=\"None\">\n            <Text>None</Text>\n          </Item>\n          <Item key=\"White Out\">\n            <Text>White Out</Text>\n          </Item>\n          <Item key=\"Black Out\">\n            <Text>Black Out</Text>\n          </Item>\n          <Item key=\"Cross\">\n            <Text>Cross</Text>\n          </Item>\n        </Picker>\n        <Slider label=\"Duration\" maxValue={480} value={cut.action?.fadeOutDuration} width=\"100%\" />\n      </Flex>\n    </>\n  );\n};\n","import React, { useGlobal } from 'reactn';\nimport { Flex, TextField } from '@adobe/react-spectrum';\nimport { LabelTop, LabelSideL, LabelSideM } from 'Label';\n\nexport const CameraWork: React.FC = () => {\n  const cut = useGlobal('cut')[0];\n  return (\n    <>\n      <LabelTop>Position</LabelTop>\n      <Flex direction=\"row\" gap=\"size-200\" wrap>\n        <LabelSideL>In</LabelSideL>\n        <LabelSideM>X</LabelSideM>\n        <TextField\n          width=\"68px\"\n          isQuiet\n          value={cut.cameraWork?.position ? cut.cameraWork?.position?.in.x.toString() : ''}\n        ></TextField>\n        <LabelSideM>Y</LabelSideM>\n        <TextField\n          width=\"68px\"\n          isQuiet\n          value={cut.cameraWork?.position ? cut.cameraWork?.position?.in.y.toString() : ''}\n        ></TextField>\n        <LabelSideL>Out</LabelSideL>\n        <LabelSideM>X</LabelSideM>\n        <TextField\n          width=\"68px\"\n          isQuiet\n          value={cut.cameraWork?.position ? cut.cameraWork?.position?.out.x.toString() : ''}\n        ></TextField>\n        <LabelSideM>Y</LabelSideM>\n        <TextField\n          width=\"68px\"\n          isQuiet\n          value={cut.cameraWork?.position ? cut.cameraWork?.position?.out.y.toString() : ''}\n        ></TextField>\n        <LabelSideL>Scale</LabelSideL>\n        <LabelSideM>In</LabelSideM>\n        <TextField\n          width=\"68px\"\n          isQuiet\n          value={cut.cameraWork?.scale ? cut.cameraWork?.scale?.in.toString() : ''}\n        ></TextField>\n        <LabelSideM>Out</LabelSideM>\n        <TextField\n          width=\"68px\"\n          isQuiet\n          value={cut.cameraWork?.scale ? cut.cameraWork?.scale?.out.toString() : ''}\n        ></TextField>\n      </Flex>\n    </>\n  );\n};\n","import React, { useState } from 'reactn';\nimport styled from 'styled-components';\nimport { Flex, Text } from '@adobe/react-spectrum';\nimport ChevronRight from '@spectrum-icons/workflow/ChevronRight';\nimport ChevronDown from '@spectrum-icons/workflow/ChevronDown';\n\nconst LabelHover = styled.div`\n  width: 100%;\n  margin: var(--spectrum-global-dimension-size-50, var(--spectrum-alias-size-50)) 0;\n  padding: var(--spectrum-global-dimension-size-50, var(--spectrum-alias-size-50)) 0;\n  :hover {\n    background-color: var(--spectrum-alias-highlight-hover);\n    border-radius: var(--spectrum-global-dimension-size-50, var(--spectrum-alias-size-50));\n  }\n`;\n\nconst Toggle = styled.input`\n  display: none;\n`;\n\nconst Ul = styled.ul`\n  padding-left: var(--spectrum-global-dimension-size-300, var(--spectrum-alias-size-300));\n  margin: 0;\n`;\n\nconst Label: React.FC<{ labelFor: string }> = ({ labelFor, children }) => (\n  <LabelHover>\n    <label htmlFor={labelFor}>{children}</label>\n  </LabelHover>\n);\n\nexport const Accordion: React.FC<{ labelName: string }> = ({ labelName, children }) => {\n  const [toggle, setToggle] = useState(false);\n  return (\n    <>\n      <Toggle type=\"checkbox\" id={labelName} checked={toggle} onClick={() => setToggle(!toggle)} />\n\n      <Label labelFor={labelName}>\n        <Flex direction=\"row\" gap=\"size-100\" alignItems=\"center\">\n          {toggle ? <ChevronDown size=\"S\" /> : <ChevronRight size=\"S\" />}\n          <Text>{labelName}</Text>\n        </Flex>\n      </Label>\n\n      <Ul style={{ display: `${toggle ? 'block' : 'none'}` }}>{children}</Ul>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.li`\n  list-style: none;\n  margin: var(--spectrum-global-dimension-size-50, var(--spectrum-alias-size-50)) 0;\n  padding: var(--spectrum-global-dimension-size-50, var(--spectrum-alias-size-50)) 0;\n  ::before {\n    content: '';\n    width: var(--spectrum-global-dimension-size-225, var(--spectrum-alias-size-225));\n    padding-right: var(--spectrum-global-dimension-size-100, var(--spectrum-alias-size-100));\n  }\n  :hover {\n    background-color: var(--spectrum-alias-highlight-hover);\n    border-radius: var(--spectrum-global-dimension-size-50, var(--spectrum-alias-size-50));\n  }\n`;\n","import React, { useGlobal, useState, useEffect } from 'reactn';\nimport { Accordion } from 'Accordion';\nimport { List } from 'List';\nimport { Psd } from 'ag-psd';\nimport styled from 'styled-components';\nconst { api } = window;\n\nconst A = styled.a`\n  text-decoration: none;\n  display: inline-block;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const Outline: React.FC = () => {\n  const prtPsd: Psd = { width: 1, height: 1 };\n  const prtCut: Cut = {\n    picture: prtPsd,\n  };\n  const [cuts, setCuts] = useState([prtCut]);\n  const globalCuts = useGlobal('globalCuts')[0];\n  const setCut = useGlobal('cut')[1];\n\n  useEffect(() => {\n    const f = async () => {\n      try {\n        if (!api) {\n          const cutsWithNoPicture: Cut[] = globalCuts;\n          setCuts(cutsWithNoPicture);\n          return;\n        }\n        const json = await api.loadJSON();\n        const cutsWithNoPicture: Cut[] = json;\n        setCuts(cutsWithNoPicture);\n      } catch (e) {\n        alert(e);\n      }\n    };\n    f();\n  }, [globalCuts, setCuts]);\n  return (\n    <>\n      <Accordion labelName=\"Scene1\">\n        {cuts?.length > 1 &&\n          cuts?.map((cut, index) => (\n            <List\n              onClick={() => setCut(cut)}\n              id={`List${index + 1}`}\n              onMouseEnter={() => document.getElementById(`Cut${index + 1}`)?.classList.add('isHover')}\n              onMouseLeave={() => document.getElementById(`Cut${index + 1}`)?.classList.remove('isHover')}\n            >\n              <A href={`#Cut${index + 1}`}>Cut{index + 1}</A>\n            </List>\n          ))}\n      </Accordion>\n    </>\n  );\n};\n","import React from 'reactn';\nimport styled from 'styled-components';\nimport Asset from '@spectrum-icons/workflow/Asset';\nimport Audio from '@spectrum-icons/workflow/Audio';\nimport { Text } from '@adobe/react-spectrum';\n\nconst CardArea = styled.div`\n  width: 118px;\n  height: var(--spectrum-global-dimension-size-1600, var(--spectrum-alias-size-1600));\n  border-radius: var(--spectrum-global-dimension-size-50, var(--spectrum-alias-size-50));\n  border: 1px solid var(--spectrum-alias-border-color);\n  background-color: var(--spectrum-alias-appframe-border-color);\n  display: flex;\n  flex-flow: column;\n  :hover {\n    color: var(--spectrum-alias-text-color-hover);\n    border-color: var(--spectrum-alias-border-color-hover);\n  }\n`;\n\nconst IconArea = styled.div`\n  height: 50%;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst TitleArea = styled(IconArea)`\n  background-color: var(--spectrum-tray-background-color);\n  border-bottom-left-radius: var(--spectrum-global-dimension-size-50, var(--spectrum-alias-size-50));\n  border-bottom-right-radius: var(--spectrum-global-dimension-size-50, var(--spectrum-alias-size-50));\n`;\n\nexport const Card: React.FC<{ Title: string; Type: string }> = ({ Title, Type }) => {\n  interface Itype {\n    [key: string]: JSX.Element;\n  }\n  const type: Itype = {\n    movie: <Asset size=\"S\" />,\n    audio: <Audio size=\"S\" />,\n  };\n\n  const iconRender = (mediatype: string): JSX.Element => type[mediatype];\n\n  return (\n    <CardArea>\n      <IconArea>{iconRender(Type)}</IconArea>\n      <TitleArea>\n        <Text>{Title}</Text>\n      </TitleArea>\n    </CardArea>\n  );\n};\n","import React from 'reactn';\nimport { Flex } from '@adobe/react-spectrum';\nimport { Card } from 'Card';\n\nexport const Media: React.FC = () => {\n  return (\n    <Flex direction=\"row\" gap=\"size-200\" wrap>\n      <Card Title=\"Title.mp4\" Type=\"movie\"></Card>\n      <Card Title=\"Credit.mp4\" Type=\"movie\"></Card>\n      <Card Title=\"BGM1.wav\" Type=\"audio\"></Card>\n    </Flex>\n  );\n};\n","import React from 'reactn';\nimport { TextArea } from '@adobe/react-spectrum';\n\nexport const Dialogue: React.FC = () => {\n  return (\n    <>\n      <TextArea minWidth=\"100%\" width=\"100%\" marginTop=\"size-200\" />\n    </>\n  );\n};\n","import React, { useGlobal } from 'reactn';\nimport styled from 'styled-components';\nimport { Flex, Heading, Text } from '@adobe/react-spectrum';\nimport ImageAlbum from '@spectrum-icons/workflow/ImageAlbum';\nimport MovieCamera from '@spectrum-icons/workflow/MovieCamera';\nimport ViewList from '@spectrum-icons/workflow/ViewList';\nimport Comment from '@spectrum-icons/workflow/Comment';\nimport Asset from '@spectrum-icons/workflow/Asset';\nimport { Transition } from 'Transition';\nimport { CameraWork } from 'CameraWork';\nimport { Outline } from 'Outline';\nimport { Media } from 'Media';\nimport { Dialogue } from 'Dialogue';\n\nconst ToolArea = styled.div`\n  padding-left: var(--spectrum-global-dimension-size-200, var(--spectrum-alias-size-200));\n  padding-right: var(--spectrum-global-dimension-size-200, var(--spectrum-alias-size-200));\n  padding-bottom: var(--spectrum-global-dimension-size-200, var(--spectrum-alias-size-200));\n  border-bottom: 2px solid var(--spectrum-alias-appframe-border-color);\n  user-select: none;\n  height: fit-content;\n  &:last-of-type {\n    overflow: auto;\n  }\n`;\n\nconst Tool: React.FC<{ Title: string }> = ({ Title, children }) => {\n  interface Itool {\n    [key: string]: JSX.Element;\n  }\n  const tool: Itool = {\n    Transition: <ImageAlbum size=\"XS\" />,\n    'Camera Work': <MovieCamera size=\"XS\" />,\n    Outline: <ViewList size=\"XS\" />,\n    Dialogue: <Comment size=\"XS\" />,\n    Media: <Asset size=\"XS\" />,\n  };\n\n  const iconRender = (title: string): JSX.Element => tool[title];\n\n  return (\n    <ToolArea style={Title === 'Outline' ? { maxHeight: 'calc(100vh - 580px)' } : { maxHeight: 'calc(100vh - 257px)' }}>\n      <Flex direction=\"row\" alignItems=\"center\">\n        {iconRender(Title)}\n        <Heading level={4} margin=\"size-200\">\n          <Text>{Title}</Text>\n        </Heading>\n      </Flex>\n      {children}\n    </ToolArea>\n  );\n};\n\nexport const Panels: React.FC = () => {\n  const mode = useGlobal('mode')[0];\n  return (\n    <>\n      <div style={mode === 'Edit' ? { display: 'block', height: '100%', overflow: 'hidden' } : { display: 'none' }}>\n        <Tool Title=\"Transition\">\n          <Transition />\n        </Tool>\n        <Tool Title=\"Camera Work\">\n          <CameraWork />\n        </Tool>\n        <Tool Title=\"Outline\">\n          <Outline />\n        </Tool>\n      </div>\n      <div style={mode === 'Preview' ? { display: 'block' } : { display: 'none' }}>\n        <Tool Title=\"Dialogue\">\n          <Dialogue />\n        </Tool>\n\n        <Tool Title=\"Media\">\n          <Media />\n        </Tool>\n      </div>\n    </>\n  );\n};\n","import React, { useGlobal, useState, useEffect } from 'reactn';\nimport { Grid, Heading, View, Flex, ProgressCircle } from '@adobe/react-spectrum';\nimport styled from 'styled-components';\nimport { readPsd, Psd, Layer } from 'ag-psd';\n\nconst Scroll = styled.div`\n  height: calc(100vh - 82px);\n  width: 100%;\n  overflow-y: auto;\n  overflow-x: hidden;\n`;\n\nconst MyTextArea = styled.textarea`\n  position: absolute;\n  top: 2px;\n  height: calc(100% - 4px);\n  width: calc(100% - 4px);\n  resize: none;\n  background: none;\n  margin: 0;\n  padding: 0;\n  border: none;\n\n  :focus {\n    outline: 2px solid var(--spectrum-alias-border-color-focus);\n    border-radius: var(--spectrum-global-dimension-size-50, var(--spectrum-alias-size-50));\n  }\n`;\n\nconst In = styled.div`\n  color: var(--spectrum-semantic-positive-color-border);\n  border: 2px solid var(--spectrum-semantic-positive-color-border);\n  border-radius: var(--spectrum-global-dimension-size-50, var(--spectrum-alias-size-50));\n  position: absolute;\n  z-index: 2;\n`;\n\nconst Out = styled.div`\n  color: var(--spectrum-semantic-negative-color-border);\n  border: 2px solid var(--spectrum-semantic-negative-color-border);\n  border-radius: var(--spectrum-global-dimension-size-50, var(--spectrum-alias-size-50));\n  position: absolute;\n  z-index: 3;\n`;\n\nconst Fade = styled.svg`\n  padding: 0;\n  margin: 0;\n  stroke: none;\n  fill: var(--spectrum-alias-text-color);\n  position: absolute;\n  left: calc((100% - 96px) / 2);\n`;\n\nconst TextContainer: React.FC<{ action?: Action; dialogue?: string; time?: number; timeSum?: number }> = ({\n  action,\n  dialogue,\n  time,\n  timeSum,\n}) => {\n  const tool = useGlobal('tool')[0] as Set<string>;\n  const escKeyDown = (e: React.KeyboardEvent) => {\n    const activeElement = document.activeElement as HTMLElement;\n    e.key === 'Escape' && activeElement.blur();\n  };\n  return (\n    <>\n      <View gridArea=\"action\" width=\"100%\" position=\"relative\" height=\"auto\">\n        <MyTextArea className={tool.has('Text') ? 'hover' : ''} disabled={!tool.has('Text')} onKeyDown={escKeyDown}>\n          {`${action?.fadeIn ? action?.fadeIn : ''}\\n${action?.fadeInDuration ? action?.fadeInDuration : ''}\\n${\n            action?.fadeOut ? action?.fadeOut : ''\n          }\\n${action?.fadeOutDuration ? action?.fadeOutDuration : ''}\\n${action?.text ? action?.text : ''}\\n`}\n        </MyTextArea>\n        {action?.fadeIn && (\n          <Fade viewBox=\"0 0 96 48\" width=\"96px\">\n            <path d=\"M48,2.83,91.17,46H4.83L48,2.83M48,0,0,48H96L48,0Z\" />\n          </Fade>\n        )}\n        {action?.fadeOut && (\n          <Fade viewBox=\"0 0 96 48\" width=\"96px\" style={{ bottom: 0 }}>\n            <path d=\"M91.17,2,48,45.17,4.83,2H91.17M96,0Zm0,0H0L48,48,96,0Z\" />\n          </Fade>\n        )}\n      </View>\n      <View gridArea=\"dialogue\" width=\"100%\" position=\"relative\" height=\"auto\">\n        <MyTextArea className={tool.has('Text') ? 'hover' : ''} disabled={!tool.has('Text')} onKeyDown={escKeyDown}>\n          {dialogue}\n        </MyTextArea>\n      </View>\n      <View gridArea=\"time\" width=\"100%\" position=\"relative\" height=\"auto\">\n        <MyTextArea className={tool.has('Text') ? 'hover' : ''} disabled={!tool.has('Text')} onKeyDown={escKeyDown}>\n          {`${time! > 24 ? ((time! / 24) | 0) + ':' + ('00' + (time! % 24)).slice(-2) : ('00' + time).slice(-2)}\\n${\n            timeSum! > 24\n              ? ((timeSum! / 24) | 0) + ':' + ('00' + (timeSum! % 24)).slice(-2)\n              : ('00' + timeSum).slice(-2)\n          }`}\n        </MyTextArea>\n      </View>\n    </>\n  );\n};\n\nconst { api } = window;\n\nconst CutContainer: React.FC = () => {\n  const prtPsd: Psd = { width: 1, height: 1 };\n  const prtCut: Cut = {\n    picture: prtPsd,\n  };\n  const [cuts, setCuts] = useState([prtCut]);\n  const globalCuts = useGlobal('globalCuts')[0];\n  const globalPsds = useGlobal('globalPsds')[0];\n\n  useEffect(() => {\n    const f = async () => {\n      const joinBy = (arr1: Cut[], arr2: Cut[]) => {\n        const arr2Dict = new Map(arr2?.map((o, index) => [index, o]));\n        return arr1?.map((item, index) => ({ ...item, ...arr2Dict.get(index) }));\n      };\n      if (!api) {\n        const psds = globalPsds;\n        const cutsWithNoPicture: Cut[] = globalCuts;\n        const cutsWithNoJson: Cut[] = psds?.map((psd) => {\n          return { picture: psd };\n        });\n        const cuts = joinBy(cutsWithNoPicture, cutsWithNoJson);\n        setCuts(cuts);\n        return;\n      }\n      const psdfiles = await api.loadPSD();\n      const json = await api.loadJSON();\n      const psds = psdfiles?.map((psdfile) => readPsd(psdfile));\n      const cutsWithNoPicture: Cut[] = json;\n      const cutsWithNoJson: Cut[] = psds?.map((psd) => {\n        return { picture: psd };\n      });\n\n      const cuts = joinBy(cutsWithNoPicture, cutsWithNoJson);\n      setCuts(cuts);\n    };\n    f();\n  }, [globalCuts, globalPsds, setCuts]);\n\n  return (\n    <>\n      {!api && cuts?.length > 1 && !cuts[1]?.picture && (\n        <Flex direction=\"column\" alignItems=\"center\" justifyContent=\"center\" height=\"100%\">\n          <ProgressCircle aria-label=\"Loading…\" isIndeterminate size=\"L\" />\n          <Heading>Now Loading...</Heading>\n        </Flex>\n      )}\n      {api && cuts?.length === 1 && (\n        <Flex direction=\"column\" alignItems=\"center\" justifyContent=\"center\" height=\"100%\">\n          <ProgressCircle aria-label=\"Loading…\" isIndeterminate size=\"L\" />\n          <Heading>Now Loading...</Heading>\n        </Flex>\n      )}\n      {cuts?.length > 1 &&\n        cuts.map((cut, index) => {\n          const timeSum = cuts.slice(0, index + 1).reduce((sum, i) => i.time && sum + i.time, 0);\n          return (\n            <View backgroundColor=\"gray-100\">\n              <div\n                className={'hover'}\n                id={`Cut${index + 1}`}\n                onClick={() => document.getElementById(`List${index + 1}`)?.click()}\n                onMouseEnter={() => document.getElementById(`List${index + 1}`)?.classList.add('isHover')}\n                onMouseLeave={() => document.getElementById(`List${index + 1}`)?.classList.remove('isHover')}\n              >\n                <Grid\n                  columns={['size-900', 'size-3600', 'auto', 'auto', 'size-1600']}\n                  areas={['cut picture action dialogue time']}\n                  gap=\"size-200\"\n                  height=\"auto\"\n                  marginBottom=\"size-25\"\n                >\n                  <View gridArea=\"cut\" width=\"100%\" height=\"auto\">\n                    <Flex direction=\"column\" alignItems=\"center\">\n                      <Heading>{('00' + (index + 1)).slice(-3)}</Heading>\n                    </Flex>\n                  </View>\n                  <View gridArea=\"picture\" width=\"100%\" height=\"auto\">\n                    {cut.picture?.children\n                      ?.filter((child: Psd['children'], layerindex: number) => layerindex !== 0)\n                      .map((child: Layer) => {\n                        const src = child.canvas?.toDataURL('image/png', 0.4);\n                        return (\n                          <div\n                            style={{\n                              height: `${child.canvas && child.canvas.height * 0.12}px`,\n                              width: `${child.canvas && child.canvas.width * 0.12}px`,\n                              backgroundColor: '#fff',\n                              position: 'relative',\n                            }}\n                          >\n                            <img\n                              style={{ transform: 'scale(0.12)', transformOrigin: 'left top' }}\n                              src={src}\n                              alt=\"cut\"\n                            />\n                            {cut.cameraWork && (\n                              <>\n                                <In\n                                  style={{\n                                    height: `${129.6 * cut.cameraWork.scale!.in}px`,\n                                    width: `${230.4 * cut.cameraWork.scale!.in}px`,\n                                    top: `${\n                                      child.canvas &&\n                                      (child.canvas.height * 0.12 -\n                                        129.6 * (cut.cameraWork.scale!.in - cut.cameraWork.position!.in!.y!)) /\n                                        2\n                                    }px`,\n                                    left: `${\n                                      child.canvas &&\n                                      (child.canvas.width * 0.12 -\n                                        230.4 * (cut.cameraWork.scale!.in - cut.cameraWork.position!.in!.x!)) /\n                                        2\n                                    }px`,\n                                  }}\n                                >\n                                  <Heading level={4} margin=\"size-25\">\n                                    IN\n                                  </Heading>\n                                </In>\n                                <Out\n                                  style={{\n                                    height: `${129.6 * cut.cameraWork.scale!.out}px`,\n                                    width: `${230.4 * cut.cameraWork.scale!.out}px`,\n                                    top: `${\n                                      child.canvas &&\n                                      (child.canvas.height * 0.12 -\n                                        129.6 * (cut.cameraWork.scale!.out - cut.cameraWork.position!.out!.y!)) /\n                                        2\n                                    }px`,\n                                    left: `${\n                                      child.canvas &&\n                                      (child.canvas.width * 0.12 -\n                                        230.4 * (cut.cameraWork.scale!.out - cut.cameraWork.position!.out!.x!)) /\n                                        2\n                                    }px`,\n                                  }}\n                                >\n                                  <Heading level={4} margin=\"size-25\">\n                                    OUT\n                                  </Heading>\n                                </Out>\n                              </>\n                            )}\n                          </div>\n                        );\n                      })}\n                  </View>\n                  <TextContainer action={cut?.action} dialogue={cut?.dialogue} time={cut?.time} timeSum={timeSum} />\n                </Grid>\n              </div>\n            </View>\n          );\n        })}\n    </>\n  );\n};\n\nexport const Conte: React.FC = React.memo(() => {\n  return (\n    <>\n      <Grid\n        columns={['size-900', 'size-3600', 'auto', 'auto', 'size-1600']}\n        rows={['size-500']}\n        height=\"size-500\"\n        gap=\"size-200\"\n      >\n        <Heading alignSelf=\"center\" justifySelf=\"center\">\n          CUT\n        </Heading>\n        <Heading alignSelf=\"center\" justifySelf=\"center\">\n          PICTURE\n        </Heading>\n        <Heading alignSelf=\"center\" justifySelf=\"center\">\n          ACTION\n        </Heading>\n        <Heading alignSelf=\"center\" justifySelf=\"center\">\n          DIALOGUE\n        </Heading>\n        <Heading alignSelf=\"center\" justifySelf=\"center\">\n          TIME\n        </Heading>\n      </Grid>\n\n      <Scroll>\n        <CutContainer />\n      </Scroll>\n    </>\n  );\n});\n","import React, { useGlobal } from 'reactn';\nimport { Grid, Provider, defaultTheme, View } from '@adobe/react-spectrum';\nimport { GlobalStyle } from 'styles/Index';\nimport styled from 'styled-components';\nimport { ToolGroup } from 'ToolGroup';\nimport { Header } from 'Header';\nimport { Panels } from 'Panels';\nimport { Conte } from 'Conte';\n\nconst BackGround = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  margin: 0;\n  padding: 0;\n  background-color: var(--spectrum-alias-appframe-border-color);\n`;\n\nconst ToolArea = styled.div<{ gridArea: string }>`\n  background-color: var(--spectrum-alias-toolbar-background-color);\n  grid-area: ${({ gridArea }) => gridArea};\n  height: 100%;\n  overflow: hidden;\n`;\n\nconst GlobalGrid: React.FC = ({ children }) => (\n  <Provider theme={defaultTheme}>\n    <GlobalStyle />\n    <BackGround>\n      <Grid\n        areas={['header header header', 'toolbar content sidebar']}\n        columns={['size-600', 'auto', 'size-3600']}\n        rows={['size-500', 'auto']}\n        height=\"100vh\"\n        gap=\"size-25\"\n      >\n        {children}\n      </Grid>\n    </BackGround>\n  </Provider>\n);\n\nconst App: React.FC = () => {\n  const mode = useGlobal('mode')[0];\n  return (\n    <GlobalGrid>\n      <ToolArea gridArea=\"header\">\n        <Header />\n      </ToolArea>\n      <ToolArea gridArea=\"toolbar\">\n        <ToolGroup />\n      </ToolArea>\n      <ToolArea gridArea=\"sidebar\">\n        <Panels />\n      </ToolArea>\n      <View gridArea=\"content\">\n        <div style={{ display: `${mode === 'Edit' ? 'block' : 'none'}` }}>\n          <Conte />\n        </div>\n      </View>\n    </GlobalGrid>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { setGlobal } from 'reactn';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport reportWebVitals from 'reportWebVitals';\nimport { Psd } from 'ag-psd';\n\nconst prtPsd: Psd = { width: 1, height: 1 };\nconst prtCut: Cut = {\n  picture: prtPsd,\n};\n\nsetGlobal({\n  mode: 'Edit',\n  tool: new Set(['Select']),\n  cut: prtCut,\n  globalCuts: [prtCut],\n  globalPsds: [prtPsd],\n  globalFileName: '',\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}